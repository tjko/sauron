#########################################################################
# $Id$
#
# Makefile for sauron
#
Version = 0.7.3
PKGNAME = sauron

DBASE = sauron

SHELL = /bin/sh
PERL  = @PERL@
LN_S  = @LN_S@

DEFS = @DEFS@

#INSTALL_ROOT =

srcdir = @srcdir@
VPATH = @srcdir@

prefix = @prefix@
exec_prefix = @exec_prefix@

# Where to install the configuration file(s)
sysconfdir = @sysconfdir@
etcdir = $(sysconfdir)/sauron

# Where to install the executables.
bindir = $(exec_prefix)/sauron

# Where to put libraries
libdir = $(prefix)/lib

# Where to put the Info files
infodir = $(prefix)/info

# Where to put the manual pages.
mandir = $(prefix)/man


DBBACKEND = @PERL_DB_BACKEND@

RUNSQL = $(srcdir)/runsql

SGMLTOOLS = /usr/bin/sgmltools

CC        = @CC@
XCPPFLAGS = @CPPFLAGS@
CFLAGS    = @CFLAGS@ $(XCPPFLAGS) $(DEFS)
LDFLAGS   = @LDFLAGS@
LIBS      = @LIBS@
STRIP     = strip


INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@

@SET_MAKE@

# there should be no reason to modify lines below this
#########################################################################

SQL_TABLES =	sql/common.sql \
		sql/servers.sql \
		sql/zones.sql \
		sql/hosts.sql \
		sql/groups.sql \
		sql/nets.sql \
		sql/cidr_entries.sql sql/dhcp_entries.sql sql/ether_info.sql \
		sql/mx_entries.sql sql/mx_templates.sql \
		sql/ns_entries.sql \
		sql/printer_classes.sql sql/printer_entries.sql \
		sql/a_entries.sql sql/txt_entries.sql sql/srv_entries.sql \
	        sql/users.sql sql/user_rights.sql sql/user_groups.sql \
		sql/wks_entries.sql sql/wks_templates.sql \
		sql/utmp.sql sql/hinfo_templates.sql \
		sql/arec_entries.sql sql/root_servers.sql \
		sql/history.sql sql/lastlog.sql sql/news.sql \
		sql/vlans.sql sql/vmps.sql sql/group_entries.sql \
		sql/keys.sql sql/acls.sql sql/leases.sql


SQL_MISC =      sql/DEFAULTS.sql sql/misc.sql sql/copy_tables.sql \
		sql/drop_tables.sql sql/hinfo_hw.sql sql/hinfo_sw.sql \
		sql/dbconvert_1.0to1.1 sql/dbconvert_1.1to1.2 \
		sql/dbconvert_1.2to1.3 sql/dbconvert_1.3to1.4


PROGS = sauron addgroup adduser deluser delgroup modhosts \
	import import-ethers import-jyu import-roots \
	last moduser runsql status update-dhcp-info \
	export-networks generatehosts addhosts check-pending \
	expire-hosts createtables import-zone remove-hosts \
	update-hosts export-vmps import-nets import-dhcp \
	export-ip-list export-hosts export-by-group keygen

MODULES = Sauron/Util.pm Sauron/BackEnd.pm Sauron/CGIutil.pm \
	  Sauron/UtilZone.pm Sauron/Sauron.pm Sauron/UtilDhcp.pm \
	  Sauron/DB-Pg.pm Sauron/DB-DBI.pm

CGIMODULES = Utils.pm Servers.pm Groups.pm Templates.pm Nets.pm \
	     Login.pm Zones.pm Hosts.pm ACLs.pm

CONTRIB_FILES = contrib/additional-ether-codes.txt \
		contrib/Ethernet.txt \
		contrib/named.root \
		contrib/htmldoc-sql \
		contrib/kerberos-auth \
		contrib/dhcpd-lease-view

PLUGINS = sample

CGIFILES = cgi/sauron.cgi cgi/browser.cgi
LOGOFILES = icons/logo.png icons/logo_large.png
MISCFILES = COPYING COPYRIGHT

DIRNAME = $(shell basename `pwd`)
DISTNAME  = $(PKGNAME)-$(Version)
BACKUPNAME = $(PKGNAME)-`date +%b%d`

BINARIES =
OBJS =

.c.o:
	$(CC) $(CFLAGS) $(OPTIONS) -c -o $*.o $<


all:	docs

#$(PKGNAME):  $(BINARIES)
#	@echo "All done"

#parse-hosts-rows:  parse-hosts-rows.c
#	$(CC) $(CFLAGS) -o parse-hosts-rows parse-hosts-rows.c $(LDFLAGS) $(LIBS)


#strip:
#	for i in $(PKGNAME) ; do [ -x $$i ] && $(STRIP) $$i ; done

check:
	@echo "Checking modules..."
	@for f in $(MODULES); do \
		$(PERL) -w -c $$f; \
	done
	@echo "Checking programs..."
	@for f in $(PROGS); do \
		$(PERL) -w -c $$f; \
	done

clean:
	rm -f *~ *.o core a.out make.log \#*\# $(OBJS) $(BINARIES)

clean_all: clean
	rm -f Makefile config.h config.log config.cache config.status

drop_tables:
	$(RUNSQL) -v -n sql/drop_tables.sql
	@echo "Database cleaned..."

make_tables:
	@echo "Creating tables..."
	./createtables

init_tables:
	@echo "Inserting ether infos..."
	$(srcdir)/import-ethers $(srcdir)/contrib/Ethernet.txt
	$(srcdir)/import-ethers --force \
	             $(srcdir)/contrib/additional-ether-codes.txt
	@echo "Inserting default HINFO templates..."
	$(RUNSQL) contrib/hinfo_hw.sql
	$(RUNSQL) contrib/hinfo_sw.sql

docs:
	@echo "Generating docs..."
	cd $(srcdir)
	$(srcdir)/contrib/htmldoc-sql --title "Sauron: SQL table descriptions" $(SQL_TABLES) > doc/tables.html
	$(srcdir)/contrib/htmldoc-sql --docbook --title "Sauron: SQL table descriptions" $(SQL_TABLES) > doc/tables.sgml
	if [ -x $(SGMLTOOLS) ]; then \
		cd doc; \
		$(SGMLTOOLS) -b html manual.sgml; \
		$(PERL) -p -i -e 's@\.eps"@\.png"@;' manual/*.html; \
		cp overview.png relations.png manual/; \
		$(LN_S) sauron-manual.html manual/index.html; \
		$(SGMLTOOLS) -b dvi manual.sgml; \
		dvips -t letter -o manual.ps manual.dvi; \
	fi


grant_full:
	perl -e 'while (<>) { s/:user:/tjko/g; print; }' init/full-privileges.sql | psql sauron

dist:	clean
	(cd .. ; tar cvzf $(DISTNAME).tar.gz $(DIRNAME))

backup:	clean
	(cd .. ; tar cvzf $(BACKUPNAME).tar.gz $(DIRNAME))



install: make_dirs
	$(INSTALL) -m 644 config.in $(INSTALL_ROOT)/$(etcdir)/config.in
	$(PERL) -p -i -e 's@^\$$PROG_DIR = "/usr/local/sauron/";@\$$PROG_DIR = "$(bindir)/";@;' $(INSTALL_ROOT)/$(etcdir)/config.in
	if [ ! -f $(INSTALL_ROOT)/$(etcdir)/config ]; then \
	    $(INSTALL) -m 644 config.in $(INSTALL_ROOT)/$(etcdir)/config; \
	    $(PERL) -p -i -e 's@^\$$PROG_DIR = "/usr/local/sauron/";@\$$PROG_DIR = "$(bindir)/";@;' $(INSTALL_ROOT)/$(etcdir)/config; \
	fi
	$(INSTALL) -m 644 config-browser.in \
		$(INSTALL_ROOT)/$(etcdir)/config-browser.in
	$(PERL) -p -i -e 's@^\$$PROG_DIR = "/usr/local/sauron/";@\$$PROG_DIR = "$(bindir)/";@;' $(INSTALL_ROOT)/$(etcdir)/config-browser.in
	if [ ! -f $(INSTALL_ROOT)/$(etcdir)/config-browser ]; then \
	    $(INSTALL) -m 644 config-browser.in \
		$(INSTALL_ROOT)/$(etcdir)/config-browser; \
	    $(PERL) -p -i -e 's@^\$$PROG_DIR = "/usr/local/sauron/";@\$$PROG_DIR = "$(bindir)/";@;' $(INSTALL_ROOT)/$(etcdir)/config-browser; \
	fi
	@for f in $(PROGS); do \
		$(INSTALL) -m 755 $$f $(INSTALL_ROOT)/$(bindir); \
	done
	@for f in $(MISCFILES); do \
		$(INSTALL) -m 644 $$f $(INSTALL_ROOT)/$(bindir); \
	done
	@for f in $(CGIFILES); do \
		$(INSTALL) -m 755 $$f $(INSTALL_ROOT)/$(bindir)/cgi; \
	done
	@for f in $(LOGOFILES); do \
		$(INSTALL) -m 644 $$f $(INSTALL_ROOT)/$(bindir)/icons; \
	done
	@for f in $(MODULES); do \
		$(INSTALL) -m 644 $$f $(INSTALL_ROOT)/$(bindir)/Sauron; \
	done
	@for f in $(CGIMODULES); do \
		$(INSTALL) -m 644 Sauron/CGI/$$f $(INSTALL_ROOT)/$(bindir)/Sauron/CGI; \
	done
	@for f in $(SQL_TABLES) $(SQL_MISC); do \
		$(INSTALL) -m 644 $$f $(INSTALL_ROOT)/$(bindir)/sql; \
	done
	@for f in $(CONTRIB_FILES); do \
		$(INSTALL) -m 644 $$f $(INSTALL_ROOT)/$(bindir)/contrib; \
	done
	@for f in $(PLUGINS); do \
		$(INSTALL) -m 644 plugins/$$f.conf $(INSTALL_ROOT)/$(bindir)/plugins; \
		$(INSTALL) -m 644 plugins/$$f.pm $(INSTALL_ROOT)/$(bindir)/plugins; \
	done
	@[ -f $(INSTALL_ROOT)/$(bindir)/modgroup ] && \
		 rm -f $(INSTALL_ROOT)/$(bindir)/modgroup || :
	@ln -s moduser $(INSTALL_ROOT)/$(bindir)/modgroup
	@[ -f $(INSTALL_ROOT)/$(bindir)/Sauron/DB.pm ] && \
		 rm -f $(INSTALL_ROOT)/$(bindir)/Sauron/DB.pm || :
	@ln -s $(DBBACKEND) $(INSTALL_ROOT)/$(bindir)/Sauron/DB.pm
# fix paths in perl files
	@echo "Fixing paths in perl files..."
	@for f in $(PROGS) $(CGIFILES); do \
		echo $(INSTALL_ROOT)/$(bindir)/$$f; \
		$(PERL) -p -i -e 's@^#!/usr/bin/perl -I/usr/local/sauron@#!$(PERL) -I$(bindir)@;' $(INSTALL_ROOT)/$(bindir)/$$f; \
	done
	@echo $(INSTALL_ROOT)/$(bindir)/Sauron/Sauron.pm
	@$(PERL) -p -i -e 's@__CONF_FILE_PATH__@$(etcdir)@;' $(INSTALL_ROOT)/$(bindir)/Sauron/Sauron.pm

make_dirs:
	$(INSTALL) -m 755 -d $(INSTALL_ROOT)/$(etcdir)
	$(INSTALL) -m 755 -d $(INSTALL_ROOT)/$(bindir)
	$(INSTALL) -m 755 -d $(INSTALL_ROOT)/$(bindir)/backups
	$(INSTALL) -m 755 -d $(INSTALL_ROOT)/$(bindir)/cgi
	$(INSTALL) -m 755 -d $(INSTALL_ROOT)/$(bindir)/Sauron
	$(INSTALL) -m 755 -d $(INSTALL_ROOT)/$(bindir)/Sauron/CGI
	$(INSTALL) -m 755 -d $(INSTALL_ROOT)/$(bindir)/sql
	$(INSTALL) -m 755 -d $(INSTALL_ROOT)/$(bindir)/logs
	$(INSTALL) -m 755 -d $(INSTALL_ROOT)/$(bindir)/contrib
	$(INSTALL) -m 755 -d $(INSTALL_ROOT)/$(bindir)/icons
	$(INSTALL) -m 755 -d $(INSTALL_ROOT)/$(bindir)/plugins


printable.man:
	groff -Tps -mandoc ./$(PKGNAME).1 >$(PKGNAME).ps
	groff -Tascii -mandoc ./$(PKGNAME).1 | tee $(PKGNAME).prn | sed 's/.//g' >$(PKGNAME).txt

install.man:
	$(INSTALL) -m 644 $(PKGNAME).1 $(mandir)/man1/$(PKGNAME).1



# a tradition !
love:
	@echo "Not War - Eh?"
# eof

