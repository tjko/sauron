/* convert Sauron database format from 1.2 to 1.3 */
/* (this requires PostgreSQL v7.3 or later) */


/* vmps */
/* ALTER TABLE vmps DROP CONSTRAINT vmps_key; */
/* DROP INDEX vmps_id_key; */
/* ALTER TABLE vmps ADD CONSTRAINT vmps_key UNIQUE(name,server); */
/* ALTER TABLE vmps ADD PRIMARY KEY(id); */

/* vlans */
/* ALTER TABLE vlans DROP CONSTRAINT vlans_key; */
/* DROP INDEX vlans_id_key; */
/* ALTER TABLE vlans ADD CONSTRAINT vlans_key UNIQUE(name,server); */
/* ALTER TABLE vlans ADD PRIMARY KEY(id); */

/* nets */
/* ALTER TABLE nets DROP CONSTRAINT nets_key; */
/* DROP INDEX nets_id_key; */
/* ALTER TABLE nets ADD CONSTRAINT nets_key UNIQUE(net,server); */
/* ALTER TABLE nets ADD PRIMARY KEY(id); */

/* zones */
/* ALTER TABLE zones DROP CONSTRAINT zones_pkey; */
/* DROP INDEX zones_id_key; */
/* ALTER TABLE zones ADD CONSTRAINT zones_key UNIQUE(name,server); */
/* ALTER TABLE zones ADD PRIMARY KEY(id); */


/* keys table creation */

CREATE TABLE keys (
	id	    SERIAL PRIMARY KEY, /* unique ID */
	type        INT4 NOT NULL, /* type:
				      1=server */
        ref	    INT4 NOT NULL, /* ptr to table speciefied by type field
					-->servers.id */

	name	    TEXT NOT NULL,  /* key name */
	keytype	    INT4 DEFAULT 0, /* key type (bitmap):
					0 = AUTHCONF
					1 = NOCONF (16384),
					2 = NOAUTH (32768),	
					3 = NOKEY */
	nametype    INT4 DEFAULT 0,  /* name type:
					0 = USER,
					1 = ZONE (256),
					2 = ENTITY (512) */		 

	protocol    INT4 NOT NULL, /* key validity for protocols:
 					0 = reserved,
					1 = TLS,
					2 = email,
					3 = dnssec,	
					4 = IPSEC,
					255 = All */
	algorithm   INT4 NOT NULL, /* algorithm:
					0 = reserved,
					1 = RSA/MD5 [RFC2437],
					2 = Diffie-Hellman [RFC2539],
					3 = DSA [RFC 2536],
					4 = reserved for ECC (elliptic curve),
					157 = HMAC MD5
					*/

	mode	    INT4 DEFAULT 0,  /* key autogeneration mode:
					0 = autogenerate key,
					1 = manually set key */   
	keysize	    INT4 DEFAULT -1, /* number of bits in the key */
	strength    INT4 DEFAULT 0,  /* reserved for key strength */	
	publickey   TEXT,	     /* public key (MIME64) */
	secretkey   TEXT,	     /* secret key (encrypted MIME74) */
	
	comment     TEXT,

	CONSTRAINT  keyname_key UNIQUE(name,ref,type)
) INHERITS(common_fields);


/* acls table creation */

CREATE TABLE acls (
       id	    SERIAL PRIMARY KEY, /* unique ID */
       server	    INT4 NOT NULL, /* ptr to a servers table record
					-->servers.id */

       name	    TEXT NOT NULL CHECK(name <> ''), /* ACL name */
       type	    INT4 NOT NULL DEFAULT 0,  /* reserved */
       comment	    TEXT,

       CONSTRAINT   acls_key UNIQUE(name,server)
) INHERITS(common_fields);

INSERT INTO acls (server,name) VALUES(-1,'any');
INSERT INTO acls (server,name) VALUES(-1,'none');
INSERT INTO acls (server,name) VALUES(-1,'localhost');
INSERT INTO acls (server,name) VALUES(-1,'localnets');


/* leases table creation */

CREATE TABLE leases (
      id	   SERIAL PRIMARY KEY, /* unique ID */
      server	   INT4 NOT NULL, /* ptr to servers table id
					-->servers.id  */
      host	   INT4 NOT NULL, /* optional ptr to hosts table id
					-->hosts.id */
      ip	   INET, /* IP number */
      ipv6	   TEXT, /* reserved */
      lstart	   INT4, /* lease start time */
      lend         INT4, /* lease end time */
      mac          CHAR(12), /* Ethernet address */
      state	   INT4 DEFAULT 0, /* lease state */
      uid	   TEXT, /* dhcp uid */
      hostname     TEXT, /* dhcp hostname */
      info	   TEXT  /* extra info */
);

CREATE INDEX leases_mac_index ON leases (mac);
CREATE INDEX leases_ip_index ON leases (ip);
CREATE INDEX leases_host_index ON leases (host);



/* update cidr_entries table to accommodate ACL use */

ALTER TABLE cidr_entries ADD COLUMN mode INT4;
ALTER TABLE cidr_entries ALTER COLUMN mode SET DEFAULT 0;
UPDATE cidr_entries SET mode=0;

ALTER TABLE cidr_entries ADD COLUMN acl INT4;
ALTER TABLE cidr_entries ALTER COLUMN acl SET DEFAULT -1;
UPDATE cidr_entries SET acl=-1;

ALTER TABLE cidr_entries ADD COLUMN tkey INT4;
ALTER TABLE cidr_entries ALTER COLUMN tkey SET DEFAULT -1;
UPDATE cidr_entries SET tkey=-1;

ALTER TABLE cidr_entries ADD COLUMN op INT4;
ALTER TABLE cidr_entries ALTER COLUMN op SET DEFAULT 0;
UPDATE cidr_entries SET op=0;


/* update zones table */

ALTER TABLE zones ADD COLUMN transfer_source INET;
/* DELETE FROM cidr_entries WHERE type=13; */


/* add some indexes to speed up common queries */

CREATE INDEX a_entries_ip_index ON a_entries (ip);
CREATE INDEX a_entries_host_index ON a_entries (host);
CREATE INDEX arec_entries_host_index ON arec_entries (host);
CREATE INDEX cidr_entries_ref_index ON cidr_entries (type,ref);
CREATE INDEX cidr_entries_ip_index ON cidr_entries (ip);
CREATE INDEX dhcp_entries_ref_index ON dhcp_entries (type,ref);
CREATE INDEX group_entries_host_index ON group_entries (host);
CREATE INDEX history_sid_index ON history(sid);
CREATE INDEX history_uid_index ON history(uid);
CREATE INDEX mx_entries_ref_index ON mx_entries (type,ref);
CREATE INDEX ns_entries_ref_index ON ns_entries (type,ref);
CREATE INDEX srv_entries_ref_index ON srv_entries (type,ref);
CREATE INDEX txt_entries_ref_index ON txt_entries (type,ref);
CREATE INDEX user_rights_ref_index ON user_rights (type,ref);
CREATE INDEX wks_entries_ref_index ON wks_entries (type,ref);


UPDATE settings SET value='1.3' where setting='dbversion'; 

/* eof */

